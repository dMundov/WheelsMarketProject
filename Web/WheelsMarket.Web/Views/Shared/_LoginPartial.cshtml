@using WheelsMarket.Common
@using WheelsMarket.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav" style="list-style: none;">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li class="nav-item">
            <i class="fa fa-user text-primary fa-lg"></i><a class="nav-link text-dark fa-lg" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> @(this.User.Identity.Name)</a>
        </li>
        if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Administration" asp-controller="Dashboard" asp-action="Index" title="Admin">Admin</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new {area = string.Empty}))">
                <button type="submit" class="nav-link btn btn-link text-primary fa-lg">Излез</button>
            </form>
        </li>
    }
    else
    {
        <li class="list-inline user-menu pull-right">
        <li class="user-register">
            <i class="fa fa-edit text-primary fa-2x "></i> <a asp-area="Identity" asp-page="/Account/Register" class="text-uppercase">Register</a>
        </li>
        <li class="user-login">
            <i class="fa fa-sign-in text-primary fa-2x"></i> <a asp-area="Identity" asp-page="/Account/Login" class="text-uppercase">Log in</a>
        </li>
        </li>
        <li class="list-inline user-menu pull-right">
        <li class="user-button">
            <a class="btn btn-primary btn-hh-trigger" role="button" data-toggle="collapse" data-target=".header-hidden">Open</a>
        </li>
        </li>
    }
</ul>
