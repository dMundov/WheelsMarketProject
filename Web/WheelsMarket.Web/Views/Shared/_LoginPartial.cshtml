@using WheelsMarket.Common
@using WheelsMarket.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = UserManager.GetUserAsync(this.User);
}

<ul class="nav navbar-nav navbar-right">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li>
            <img src="@user.Result.ProfilePicturePath" alt="User_avatar" class="user_avatar">
        </li>
        <li>
            <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @(this.User.Identity.Name)
            </a>
        </li>
        if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Administration" asp-controller="Dashboard" asp-action="Index" title="Admin">Admin</a>
            </li>
        }
        <li>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new {area = string.Empty}))" id="log-out-button">
                <button type="submit" class="btn btn-danger btn-sm"><span class="glyphicon glyphicon-log-out"></span> Изход</button>
            </form>
        </li>
    }
    else
    {

        <li>
            <a asp-area="Identity" asp-page="/Account/Register"><span class="glyphicon glyphicon-user"></span> Sign Up</a>
        </li>
        <li>
            <a asp-area="Identity" asp-page="/Account/Login"><span class="glyphicon glyphicon-log-in"></span> Login</a>
        </li>

    }
</ul>


